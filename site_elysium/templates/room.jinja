{% extends 'base.jinja' %}
{% from 'macros/_room.jinja' import question_widget %}

{# Variables pour plus tard #}
{% set user_is_in_room = current_user in room.users %}
{# {% set nbr_question_solved = sum(q.is_solved_by(current_user) for q in room.questions) %} #}
{% set nbr_question_total = room.questions | length %}
{% if nbr_question_total == 0 %}
{% set progress_percentage = 0 %}
{% else %}
{% set progress_percentage = (nbr_question_solved / nbr_question_total*100)|round|int %}
{% endif %}

{% block title %}
{{ super() }} - {{room.name}}
{% endblock %}

{% block head %}
{{super()}}
<link rel="stylesheet" href="/static/style/room.css">
<script src="{{url_for('static', filename='script/room.js')}}"></script>
{#
<!-- ---------------------------------------------- test ------------------------------------------------------- -->
<script>
    const alertPlaceholder = document.getElementById('liveAlertPlaceholder')

    const alert = (message, type) => {
        const wrapper = document.createElement('div')
        wrapper.innerHTML = [
            `<div class="alert alert-${type} alert-dismissible" role="alert">`,
            `   <div>${message}</div>`,
            '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
            '</div>'
        ].join('')

        alertPlaceholder.append(wrapper)
    }

    const alertTrigger = document.getElementById('liveAlertBtn')
    if (alertTrigger) {
        alertTrigger.addEventListener('click', () => {
            alert('Nice, you triggered this alert message!', 'success')
        })
    }
</script>
<!-- ---------------------------------------------- test ------------------------------------------------------- --> #}

<script>
    function answerQuestion(question_id) {
        // On récupère la réponse actuelle
        let answer_field = document.getElementById(`question_answer-${question_id}`)
        answer = answer_field.value
        let answer_form = document.getElementById(`question_form-${question_id}`)

        const response = fetch('{{ url_for('api.answer_question') }}?' + new URLSearchParams({
            question_id: question_id,
            answer: answer,
        }),
            {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            }).then(response => response.json())
            //.then(response => alert(JSON.stringify(response)))
            .then(response => {
                if (response.success) {
                    if (response.correct) {
                        //answer_form.submit()
                        document.location.reload(false)
                    }
                    else {
                        alert("Réponse incorrecte!")

                    }
                }
                else {
                    alert(response.message)
                }
            })
    }
</script>
{% endblock %}

{% block content %}
<main>
    <div class="row" style="max-width:100%">
        {% block sidebar_room %}
        <div class="col">
            {% block top_button %}
            {# Si l'utilisateur n'est pas dans la room, on lui propose de la rejoindre #}
            {% if current_user.is_authenticated %}
            {% if not user_is_in_room %}
            <div class="align-item-top">
                {#
                <a href="{{ url_for('api.join_room', room_url_name=room.url_name) }}"
                    class="btn text-success rounded-1 border-2 active fw-semibold m-2" role="button">Rejoindre
                    la room
                </a>
                #}
                <script>
                    // fonction button Rejoindre la room
                    function joinRoom() {
                        fetch('{{ url_for('api.join_room', room_url_name = room.url_name) }}', {
                            method: 'POST',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json'
                            },
                        })
                            .then(response => response.json())
                            .then(response => alert(JSON.stringify(response)))
                            // refresh la page une fois que la room est rejoint
                            .then(location.reload())
                    }
                </script>

                <button type="submit" name="submit_param" value="submit_value" onclick="joinRoom();"
                    class="btn text-success rounded-1 border-2 active fw-semibold m-2" role="button">Rejoindre
                    la room
                </button>
            </div>
            {# L'utilisateur est pas dans la room, on lui propose de lancer les VMs victimes #}
            {% else %}
            {% if user_existing_vms is none %}
            <div id="request-victim-vms" class="align-item-top">
                <script>
                    function displayVictimVMInfos(response) {
                        vmInfoDiv = document.getElementById("victim-vm-info")
                        for (const i in response) {
                            var para = document.createElement("p");
                            var node = document.createTextNode(response[i].ip_address);
                            para.appendChild(node);
                            vmInfoDiv.appendChild(para)
                        }
                    }

                    function requestVictimVMs() {
                        fetch('{{ url_for('api.request_victim_vms', room_url_name = room.url_name) }}', {
                            method: 'POST',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json'
                            },
                        })
                            .then(response => response.json())
                            // .then(response => alert(JSON.stringify(response)))
                            .then(response => displayVictimVMInfos(response))
                            .then(document.getElementById("request-victim-vms").style.display = 'none')
                            .then(document.getElementById("victim-vm-info-container").style.display = 'block')
                    }
                </script>

                <button type="submit" name="submit_param" value="submit_value" onclick="requestVictimVMs();"
                    class="btn text-success rounded-1 border-2 active fw-semibold m-2" role="button">Lancers les VMs
                    victimes
                </button>
            </div>
            {% else %}
            {# TODO: Afficher les VMs existante et permettre de les supprimer #}
            {% endif %}
            {% endif %}
            {% endif %}
            {% endblock %}
            <div id="victim-vm-info-container" class="p-2" style="display:none">
                <div id="victim-vm-info" class="bg-white rounded-3 p-4">
                    <h2>VMs victimes</h2>
                </div>
            </div>

            {% block room_info %}
            <div class="p-2">
                <div class="bg-white rounded-3 p-4">
                    {{ room.instructions | markdown }}
                </div>
            </div>
            {% endblock %}

            {% block questions %}
            {% for q in room.questions %}
            {{ question_widget(q, disabled=(not current_user.is_authenticated or q.is_solved_by(current_user) or not
            user_is_in_room),
            solved=(current_user.is_authenticated and q.is_solved_by(current_user)))}}
            {% endfor %}
            {% endblock %}
        </div>
        {% endblock %}

        {% block sidebar %}
        {% if current_user.is_authenticated %}
        <div class="col-7 p-0 mt-2">
            <div class="container p-0" style="position:sticky; top:5%;">
                <!-- Progression -->
                <div class="bg-white rounded-3 p-4 mb-4">
                    <p><strong>Progression:</strong> {{nbr_question_solved}}/{{nbr_question_total}}</p>
                    <div class="progress">
                        <div class="progress-bar {{'bg-success progress-bar-striped progress-bar-animated' if nbr_question_solved == nbr_question_total else ''}}"
                            aria-valuenow="{{nbr_question_solved}}" aria-valuemin="0"
                            aria-valuemax="{{nbr_question_total}}" style="width: {{ progress_percentage }}%"></div>
                    </div>
                </div>
                {# <!-- VM --> #}
                {# <iframe class="responsive-iframe " style="width: 100% height: 100%;"
                    src="http://172.17.50.249:6080/vnc.html?host=172.17.50.249&port=6080&autoconnect=true&resize=scale">
                </iframe> #}
                {# <iframe class="responsive-iframe " sandbox='allow-same-origin allow-scripts allow-modals'
                    style="width: 100% height: 100%;" src="{{vnc_url}}">
                </iframe> #}
                {# <iframe class="responsive-iframe " style="width: 100% height: 100%;" src="{{vnc_url}}">
                </iframe> #}
            </div>
        </div>
        {% endif %}
        {% endblock %}

    </div>

</main>
{% endblock %}